@import "variables";

@mixin theme ($theme, $backColor, $elemsColor){
  .theme__#{$theme}__background {
    background-color: $backColor;
  }
  .theme__#{$theme}__footer {
    background-color: $elemsColor;
    & a {
      color: $backColor !important;
    }
  }
  .theme__#{$theme}__elements {
    color: $elemsColor !important;
  }
  .theme__#{$theme}__elements a, .theme__#{$theme}__elements h1, .theme__#{$theme}__elements h2,
  .theme__#{$theme}__elements h3, .theme__#{$theme}__elements h4, .theme__#{$theme}__elements p {
    color: $elemsColor;
  }
  .theme__#{$theme}__borders {
    border-color: $elemsColor !important;
  }
  .theme__#{$theme}__pills li.active > a,
  .theme__#{$theme}__pills a:hover, .theme__#{$theme}__pills a.active {
    color: $backColor !important;
    background-color: $elemsColor !important;
  }
  .theme__#{$theme}__pills:focus, .theme__#{$theme}__pills a:focus, .theme__#{$theme}__pills button:focus, .theme__#{$theme}__navs button:focus {
    outline: 2px solid $elemsColor;
  }
  .theme__#{$theme}__navs .active {
    color: $backColor;
    background-color: $elemsColor;
  }
  .theme__#{$theme}__navs button {
    background-color: $backColor;
    border: none;
  }
  .theme__#{$theme}__navs button:hover {
    color: $backColor;
    background-color: $elemsColor;
    transition: ease 600ms;
  }
}

// Цветовые темы
@include theme(blackWhite, $blackWhiteBackground, $blackWhiteElements);
@include theme(whiteBlack, $whiteBlackBackground, $whiteBlackElements);
@include theme(blackRed, $blackRedBackground, $blackRedElements);
@include theme(yellowBrown, $yellowBrownBackground, $yellowBrownElements);
@include theme(blueGreen, $blueGreenBackground, $blueGreenElements);

// Скрываем все изображения на сайте

.hideImages img{
  opacity: 0;
  //transition: all 0.35s;
}

// отдельные классы (для футера)
.bc__black {
  background-color: $blackWhiteBackground;
}
.bc__white {
  background-color: $whiteBlackBackground;
}
.bc__yellow {
  background-color: $yellowBrownBackground;
}
.bc__blue {
  background-color: $blueGreenBackground;
}

// Стили для верхней панели настроек
.specialSettings__container {
  background-color: #aaadb1;
  padding: 0.5% 1%;
}

.specialSettings__flex {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  align-items: flex-end;
}
.specialSettings__flex__item {
  position: relative;
  // align-items: flex-end;
  //width: 240px;
  //@media (max-width: 1200px) {
  //  width: 200px;
  //}
  //@media (max-width: 992px) {
  //  margin-left: 3.5%;
  //  width: 155px;
  //}
}
.specialSettings__flex__modeButton {
  align-self: center;
  & button {
    background-color: black; 
  }   
  & span {
    color: white;
    font-size: 120%;
  }
}

.specialSettings__flex__fontButtons {
  height: 40px;
  & button {
    background-color: black;
    padding: 6px 12px;
  }  
  & span {
    color: white;
    font-size: 150%;
    //font-weight: bold;
  }
}

@mixin themeButton ($theme, $backColor, $elemsColor) {
  .#{$theme} {
    background-color: $backColor !important;
    color: $elemsColor !important;
  }
}
@include themeButton(themeBW, $blackWhiteBackground, $blackWhiteElements);
@include themeButton(themeWB, $whiteBlackBackground, $whiteBlackElements);
@include themeButton(themeBR, $blackRedBackground, $blackRedElements);
@include themeButton(themeYB, $yellowBrownBackground, $yellowBrownElements);
@include themeButton(themeBG, $blueGreenBackground, $blueGreenElements);



//.focus:focus, .focus a:focus, .focus button:focus {
//  outline: 1px solid white;
//}
.focusImg {
  -o-transform: translateX(-10px);
  -ms-transform: translateX(-10px);
  -moz-transform: translateX(-10px);
  -webkit-transform: translateX(-10px);
  transform: translateX(-10px);
  transition: ease 300ms;
}
.focusUp {
  -o-transform: translateY(-10px);
  -ms-transform: translateY(-10px);
  -moz-transform: translateY(-10px);
  -webkit-transform: translateY(-10px);
  transform: translateY(-10px);
  transition: ease 300ms;
}
.focusNone {
  transition: ease 300ms;
}



